/*
 * PortController.c
 *
 *  Created on: Dec 27, 2022
 *      Author: Nelson
 */

#include "PortController.h"
#include "stm32f1xx_hal.h"
#include "stm32f1xx_hal_tim.h"

extern TIM_HandleTypeDef htim1;;

#define SHIFT_CLOCK GPIO_PIN_0
#define RESET GPIO_PIN_1
#define LATCH_CLOCK GPIO_PIN_3
#define OUTPUT_ENABLE GPIO_PIN_4
#define OUTPUT_DATA GPIO_PIN_5

void Port_Write(char* buffer, int offset, int bytes) {}

void Port_Read(char** pBuffer, int offset, int bytes) {}

void Port_Reset() {}

void Port_HighZ() {}

void Port_AsOutput() {}

static set_address(char value)
{
	char address = value;
//	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_SET);

	for (int i = 0; i < 8; i++)
	{
		if ((128 & address) == 128)
		{
			HAL_GPIO_WritePin(GPIOB, OUTPUT_DATA, GPIO_PIN_SET);
		}
		else
		{
			HAL_GPIO_WritePin(GPIOB, OUTPUT_DATA, GPIO_PIN_RESET);
		}

//		HAL_Delay(Delay)
	}
}

void delay_us (uint16_t us)
{
	__HAL_TIM_SET_COUNTER(&htim1,0);  // set the counter value a 0
	while (__HAL_TIM_GET_COUNTER(&htim1) < us);  // wait for the counter to reach the us input in the parameter
}
